# This is an example configuration file for nss-mysql library
# You CANNOT put 2 assignments on the same line.
# This file must be readable ONLY FOR ROOT

# This is only used if you have enabled the shadow support
# Read the SHADOW file for more information

# All assigments must have this form
# shadow.parameter = value;
# 
# NOTE: shadow.parameter =; makes parameter empty (valid)
#
# All errors will be reported in your auth log
#
# All default values match sample.sql. Read it if you don't understand
# the role of a parameter.
# 
# If you are still lost, write to nss-mysql-users@mail.freesoftware.fsf.org

#
# Configuration file upgrade instructions:
#
#    From an unumbered configuration file (without a conf.version line) 
#    To conf.version = 2
#
#    - Replace ALL field names by fully qualified field names. For instance
#      if you have
#           users.uid_column = uid;
#      replace it with
#           users.uid_column = user.uid;
#      provided "user" is the table name.
#
#    - Add a 
#      conf.version = 2;
#      line somewhere in this file so that the parser is aware that
#      you took care of the conversion.
#
#
# Configuration file version
#
conf.version = 2;

#  host: database host
#  Accepted forms:
#  1) inet:host:port or unix:socket (recommended)
#  2) inet:host (port will be 3306)
#  3) host:port (inet socket will be used)
#  4) host (inet socket on port 3306 will be used)
shadow.host = inet:localhost:3306;

# database: database name
# This database MUST contain all the columns mentionned in this file
#shadow.database = nss_mysql;
shadow.database = ssh_accounts;

# db_user: database user
# it must have the right to select all columns mentionned in this file
# Can be empty
#shadow.db_user = nss-shadow; 
shadow.db_user = ssh;

# db_password: password of db_user
#shadow.db_password = ajf3yDFg55fdf;
shadow.db_password = sraL89qr43pz;

# backup host
# A backup MySQL server
# Can be empty
shadow.backup_host = inet:backup:3306;

# The following parameters are just like
# the main server. They can be empty.
# If some are and secondary_host is not,
# the corresponding value for the main
# server will be use

#shadow.backup_database = nss_mysql_backup;
shadow.backup_database =;
# shadow.backup_db_user = nss;
# shadow.backup_db_password = mAip2sFxXJcw;


# table: table containing all the following fields
#shadow.table = user;
shadow.table = t_user;

# where_clause: a clause that user must respect to be considered valid.
# It is useful to enable only some users of your database.
# Can be empty
# All fields must be fully qualified, i.e. written as table.field
shadow.where_clause =;

# userid_column: should be the PRIMARY KEY of the table
# This information is used to cache information for ***spent functions
# The field name must be fully qualified, i.e. written as table.field
shadow.userid_column = t_user.uid;

# user_column: column containing the UNIX usernames
# The field name must be fully qualified, i.e. written as table.field
shadow.user_column = t_user.login;

# password_column: column containing the users' passwords
# The field name must be fully qualified, i.e. written as table.field
shadow.password_column = t_user.pass;

# lastchange_column
# Date of last change
# if you do not have such a column, you can use something like
# shadow.lastchange_column = UNIX_TIMESTAMP()-10;
# The field name must be fully qualified, i.e. written as table.field
#shadow.lastchange_column = user.lastchange;
shadow.lastchange_column = UNIX_TIMESTAMP()-10;

# min_column
# Minimum number of days to warn user to change the password
# if you do not have such a column, you can use something like
# shadow.min_column = 1;
# The field name must be fully qualified, i.e. written as table.field
#shadow.min_column = user.min;
shadow.min_column = 1;

# max_column
# Maximum number of days to warn user to change the password
# if you do not have such a column, you can use something like
# shadow.max_column = 2;
# The field name must be fully qualified, i.e. written as table.field
#shadow.max_column = user.max;
shadow.max_column = 2;

# warn_column
# Number of days to warn user to change the password 
# if you do not have such a column, you can use something like
# shadow.warn_column = 7;
# The field name must be fully qualified, i.e. written as table.field
#shadow.warn_column = user.warn;
shadow.warn_column = 7;

# inact_column
# Number of days the account may be inactive
# if you do not have such a column, you can use something like
# shadow.inact_column = -1; # disabled
# The field name must be fully qualified, i.e. written as table.field
#shadow.inact_column = user.inact;
shadow.inact_column = -1; # disabled

# expire_column
# Number of days since 1970-01-01 until account expired 
# if you do not have such a column, you can use something like
# shadow.expire_column = -1; # disabled
# The field name must be fully qualified, i.e. written as table.field
#shadow.expire_column = user.expire;
shadow.expire_column = -1; # disabled
